Test Cases for the ``2-matrix_divided`` module
==============================================

Using ``matrix_divided``
------------------------

Importing ``matrix_divided`` from ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now using it:

    >>> doc = __import__('2-matrix_divided').__doc__
    >>> len(doc) > 1
    True
    >>> doc = __import__('2-matrix_divided').matrix_divided.__doc__
    >>> len(doc) > 1
    True

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> print(matrix_divided((), 3))
    Traceback (most recent call last):
       ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [(1, 2, 3), (1, 2, 3)]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
       ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[1.0, 2, 3], [4, 5.0, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix = [[1.0, 'a', 3], [4, 5.0, 6]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
       ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[1, 2, 3], [4, 5]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
       ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 'a'))
    Traceback (most recent call last):
       ...
    TypeError: div must be a number

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
       ...
    ZeroDivisionError: division by zero

    >>> matrix = [[1.0, 2], [4, float("inf")]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67], [1.33, inf]]

    >>> matrix = [[1.0, 2], [4, float("inf")]]
    >>> print(matrix_divided(matrix, float('inf')))
    [[0.0, 0.0], [0.0, nan]]

    >>> matrix = [[1.0, 2, 3], [4, 5.0, float('nan')]]
    >>> print(matrix_divided(matrix, float("nan")))
    [[nan, nan, nan], [nan, nan, nan]]

    >>> print(matrix_divided(matrix))
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> print(matrix_divided())
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
